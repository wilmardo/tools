# https://www.friendlyarm.com/index.php?route=product/product&product_id=282

# Source of LOADADDR:
# https://github.com/u-boot/u-boot/blob/master/include/configs/rk3328_common.h#L20
# 32K offset makes 0x02080000: https://stackoverflow.com/a/33360107/6881060
# 0x02080000 comes from U-boot printev:
# kernel_addr_r=0x02080000
export MAKE_ARGS_DEV="
CROSS_BINUTILS_PREFIX=/usr/local/aarch64-unknown-freebsd${PRODUCT_ABI}/bin
UBLDR_LOADADDR=0x02080000
"

export PRODUCT_KERNEL=SMP-ARM
export PRODUCT_TARGET=arm64
export PRODUCT_ARCH=aarch64
export PRODUCT_WANTS="aarch64-binutils qemu-user-static"
export PRODUCT_COMSPEED=1500000

export ARM_FIRMWARE_DIR="/usr/local/share/linux-rkbin/bin/rk33"
export ARM_UBOOT_DIR="/usr/local/share/u-boot/u-boot-nanopi-r2s"

# Latest check here:
# https://mirrors.dotsrc.org/armbian-apt/pool/main/l/linux-u-boot-nanopi-r2s-current/

# Option? https://svnweb.freebsd.org/base/head/release/arm64/ROCK64.conf?revision=360273&view=markup
arm_install_uboot()
{
    # get u-boot from armbian
    deb_name=linux-u-boot-current-nanopi-r2s_21.05.1_arm64
    curl -o ${deb_name} https://mirrors.dotsrc.org/armbian-apt/pool/main/l/linux-u-boot-nanopi-r2s-current/${deb_name}.deb
    ar x ${deb_name}
    mkdir -p ${ARM_UBOOT_DIR}
    tar Jxpv -C ${ARM_UBOOT_DIR} --strip-components=4 -f data.tar.xz ./usr/lib/${deb_name}/*

    # write u-boot
	arm_unmount
    dd if=${ARM_UBOOT_DIR}/idbloader.bin of=/dev/${DEV} seek=64 bs=512 conv=sync
    dd if=${ARM_UBOOT_DIR}/uboot.img of=/dev/${DEV} seek=16384 bs=512 conv=sync
    dd if=${ARM_UBOOT_DIR}/trust.bin of=/dev/${DEV} seek=24576 bs=512 conv=sync
	arm_mount

    # Get DTB from Debian
    curl -o ${STAGEDIR}/boot/dtb/rockchip/rk3328-nanopi-r2s.dtb https://d-i.debian.org/daily-images/arm64/daily/device-tree/rockchip/rk3328-nanopi-r2s.dtb

    # cleanup
    rm -f ${deb_name}
    rm -f data.tar.xz control.tar.xz debian-binary
}
